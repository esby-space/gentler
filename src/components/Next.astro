---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

type Props = { page: CollectionEntry<"mechanics"> };
const { page } = Astro.props;

const [chapter, section] = [page.data.chapter, page.data.section];
let next = await getPageBySection(chapter, section + 1);
let previous = await getPageBySection(chapter, section - 1);

if (!next) next = await getPageBySection(chapter + 1, 1)
if (!previous) {
    const section = await getChapterLength(chapter - 1);
    previous = await getPageBySection(chapter - 1, section)
}

async function getPageBySection(chapter: number, section: number): Promise<CollectionEntry<"mechanics"> | null> {
    const collection = await getCollection("mechanics", (entry) => {
        return entry.data.chapter == chapter 
            && entry.data.section == section;
    });
    if (collection.length > 1) throw new Error("mulitple pages with the same chapter and section x_x");
    if (collection.length == 0) return null;
    return collection[0];
}

async function getChapterLength(chapter: number): Promise<number> {
    const collection = await getCollection("mechanics", (entry) => entry.data.chapter == chapter);
    return collection.length;
}
---

<div class="flex justify-center gap-4 mt-16">
    { previous && <a href={"/" + previous.slug} class="border hover:border-red-800 p-4 no-underline rounded">
        <span class="text-gray-600 dark:text-gray-400">&larr; Previous</span><br />
        <span class="text-xl">{previous.data.chapter + "." + previous.data.section + " " + previous.data.title}</span>
    </a> }
    { next && <a href={"/" + next.slug} class="border hover:border-red-800 p-4 no-underline rounded text-right">
        <span class="text-gray-700 dark:text-gray-300">Next &rarr;</span><br />
        <span class="text-xl">{next.data.chapter + "." + next.data.section + " " + next.data.title}</span>
    </a> }
</div>

